/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.sam.server.ui.components;

import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import net.jan.poolhandler.resourcepoolhandler.ResourcePoolHandler;
import net.sam.server.beans.ServerMainBean;
import net.sam.server.entities.ServerConfig;
import net.sam.server.manager.DataAccess;
import net.sam.server.manager.ValidationManager;
import net.sam.server.ui.ServerMainUI;

/**
 *
 * @author Jan
 */
public class ServerConfiguration extends javax.swing.JFrame {

    /**
     * Creates new form ServerConfiguration
     */
    public ServerConfiguration(ServerMainUI parent, ServerConfig sc) {
        initComponents();
        this.parent = parent;
        setup();
        tf_name.setText(sc.getName());
        tf_ip.setText(sc.getIpaddress());
        tf_maxCon.setText(String.valueOf(sc.getMaximalUsers()));
        tf_port.setText(String.valueOf(sc.getMaximalUsers()));
        this.oldOne = sc;
        updateMode = true;
    }

    public ServerConfiguration(ServerMainUI parent) {
        initComponents();
        this.parent = parent;
        updateMode = false;
        setup();
    }

    private void setup() {
        errorList = new ArrayList<>();
        ok = ResourcePoolHandler.getResource("validImage");
        wrong = ResourcePoolHandler.getResource("invalidImage");
    }

    private ImageIcon ok;

    private ImageIcon wrong;

    private List<String> errorList;

    private int port;

    private int maxUsers;

    private ServerMainUI parent;

    private String ip;

    private ServerConfig oldOne;

    private boolean updateMode;

    private void updateIcons() {
        if (errorList.contains("ipaddress")) {
            imgLb_ip.setIcon(wrong);
        } else if (errorList.contains("maximalUsers")) {
            imgLb_maxcon.setIcon(wrong);
        } else if (errorList.contains("port")) {
            imgLb_port.setIcon(wrong);
        } else if (errorList.contains("name")) {
            imgLb_name.setIcon(wrong);
        }
    }

    private void updateBackground() {
        ServerMainBean.reloadAllConfigs();
        parent.refreshConfigList();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tf_name = new javax.swing.JTextField();
        tf_ip = new javax.swing.JTextField();
        tf_port = new javax.swing.JTextField();
        tf_maxCon = new javax.swing.JTextField();
        imgLb_name = new javax.swing.JLabel();
        imgLb_ip = new javax.swing.JLabel();
        imgLb_port = new javax.swing.JLabel();
        imgLb_maxcon = new javax.swing.JLabel();
        btn_save = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Serverconfiguration"));

        jLabel1.setText("Name:");

        jLabel2.setText("IP:");

        jLabel3.setText("Maximum Connections:");

        jLabel4.setText("Port:");

        tf_ip.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_ipKeyReleased(evt);
            }
        });

        tf_port.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_portKeyReleased(evt);
            }
        });

        tf_maxCon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf_maxConKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(tf_port, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                    .addComponent(tf_name, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_ip, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tf_maxCon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(imgLb_name)
                    .addComponent(imgLb_ip)
                    .addComponent(imgLb_port)
                    .addComponent(imgLb_maxcon))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tf_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgLb_name))
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tf_ip, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgLb_ip))
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tf_port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgLb_port))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tf_maxCon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(imgLb_maxcon)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btn_save.setText("Save");
        btn_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_saveActionPerformed(evt);
            }
        });

        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_cancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_save)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_save)
                    .addComponent(btn_cancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_saveActionPerformed

        if (!updateMode) {
            ServerConfig sc = new ServerConfig();
            sc.setName(tf_name.getText());
            sc.setActive(rootPaneCheckingEnabled);
            sc.setIpaddress(tf_ip.getText());
            sc.setPort(Integer.decode(tf_port.getText()));
            sc.setMaximalUsers(Integer.decode(tf_maxCon.getText()));
            sc.setDeleteable(true);

            errorList = ValidationManager.returnAmountOfInvalidFields(sc);
            if (!errorList.isEmpty()) {
                updateIcons();
            } else {
                DataAccess.saveNewServerConfig(sc);
                updateBackground();
                dispose();
            }
        } else {
            ServerConfig sc = new ServerConfig();
            sc.setName(tf_name.getText());
            sc.setActive(rootPaneCheckingEnabled);
            sc.setIpaddress(tf_ip.getText());
            sc.setPort(Integer.decode(tf_port.getText()));
            sc.setMaximalUsers(Integer.decode(tf_maxCon.getText()));
            sc.setDeleteable(true);

            errorList = ValidationManager.returnAmountOfInvalidFields(sc);
            if (!errorList.isEmpty()) {
                updateIcons();
            } else {
                DataAccess.updateServerConfig(oldOne, sc);
                updateBackground();
                dispose();
            }
        }


    }//GEN-LAST:event_btn_saveActionPerformed

    private void tf_ipKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_ipKeyReleased
        ip = tf_ip.getText();
    }//GEN-LAST:event_tf_ipKeyReleased

    private void tf_portKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_portKeyReleased
        try {
            port = Integer.decode(tf_port.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Portvalue cannot be converted", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tf_portKeyReleased

    private void tf_maxConKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf_maxConKeyReleased
        try {
            maxUsers = Integer.decode(tf_maxCon.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "Value for maximal users cannot be converted", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tf_maxConKeyReleased

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerConfiguration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_save;
    private javax.swing.JLabel imgLb_ip;
    private javax.swing.JLabel imgLb_maxcon;
    private javax.swing.JLabel imgLb_name;
    private javax.swing.JLabel imgLb_port;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tf_ip;
    private javax.swing.JTextField tf_maxCon;
    private javax.swing.JTextField tf_name;
    private javax.swing.JTextField tf_port;
    // End of variables declaration//GEN-END:variables
}
